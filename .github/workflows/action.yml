# This is a basic workflow to help you get started with Actions

name: Check for new commits

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  check:
    runs-on: ubuntu-latest
    env:
      CONTEXT_GITHUB: ${{ toJson(github) }}
    
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      # setup python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
    
      # Configure pip caching
      - uses: actions/cache@v3
        name: Configure pip caching
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      # Intall Python dependencies
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
     
     
     
      # Stackoverflow test
      - name: Stackoverflow test
        run: |
          output=$(python check_commits.py)
          output="${output//'%'/'%25'}"
          output="${output//$'\n'/'%0A'}"
          output="${output//$'\r'/'%0D'}" 
          echo "::set-output name=changelog::$output"
        id: stackoverflow1
        
      - name: Print changelog
        run: echo "${{ steps.stackoverflow1.outputs.changelog }}"



      # Run checks and set outputs from checks
      - name: Run commit check
        run: |
          output=$(python check_commits.py)
          output="${output//'%'/'%25'}"
          output="${output//$'\n'/'%0A'}"
          output="${output//$'\r'/'%0D'}" 
          echo "::set-output name=changelog::$output"
          echo "::set-output name=changelog::$output"
          echo "::set-output name=changelog::$output"
        id: step1
      - name: Print changelog
        run: echo "${{ steps.step1.outputs.changelog }}"


      # Run checks
      - name: Run commit check
        run: | 
          output=$(python check_commits.py)
          echo "::set-output name=new_commit::$output"
      #echo "::set-output name=new_commit::$output[0]"
      #echo "::set-output name=latest_commit_date::$output[1]"
      #echo "::set-output name=latest_commit_message::$output[2]"
        id: checks
        
      # Print output  
      - name: Print commit check info
        run: |
          echo "${{ steps.checks.outputs.new_commit }}"
      # echo "${{ steps.checks.outputs.latest_commit_message }}"
        
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
          
# name: Run scrapers

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:
#   schedule:
#     - cron: '5 */4 * * *'

# jobs:
#   scheduled:
#     runs-on: ubuntu-latest
#     env:
#       CONTEXT_GITHUB: ${{ toJson(github) }}
#     steps:
#     - name: Check out repo
#       uses: actions/checkout@v2
#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.8
#     - uses: actions/cache@v2
#       name: Configure pip caching
#       with:
#         path: ~/.cache/pip
#         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#         restore-keys: |
#           ${{ runner.os }}-pip-
#     - name: Install Python dependencies
#       run: |
#         pip install -r requirements.txt
#     - name: Run scrapers
#       run: python get_issues.py
          
